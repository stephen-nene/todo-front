{"ast":null,"code":"var _jsxFileName = \"/home/stevonene/development/moringa/projects/todo/front/src/components/home/Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./home.css\";\nimport Delete from \"../../images/delete.png\";\nimport Update from \"../../images/update.png\";\nimport { todos as todosData } from \"../../images/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [todos, setTodos] = useState(todosData);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [tempTitle, setTempTitle] = useState(\"\");\n  const [tempSummary, setTempSummary] = useState(\"\");\n  const deleteTodo = id => {\n    setTodos(prevTodos => {\n      return prevTodos.filter(todo => todo.id !== id).map((todo, index) => {\n        return {\n          ...todo,\n          id: index + 1\n        };\n      });\n    });\n    console.log(\"delete Todo successful\");\n  };\n  const editTodo = id => {\n    const todoToUpdate = todos.find(todo => todo.id === id);\n    setTempTitle(todoToUpdate.title);\n    setTempSummary(todoToUpdate.summary);\n    setIsEditMode(true);\n  };\n  const updateTodo = id => {\n    setTodos(prevTodos => {\n      return prevTodos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title: tempTitle,\n            summary: tempSummary\n          };\n        }\n        return todo;\n      });\n    });\n    setIsEditMode(false);\n    console.log(\"update Todo successful\");\n  };\n  const toggleEditMode = () => {\n    setIsEditMode(!isEditMode);\n  };\n  const refresh = () => {\n    console.log(\"refreshed successfully\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TO-DOs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => refresh(),\n      children: \"refresh\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => toggleEditMode(),\n      children: isEditMode ? 'Cancel' : 'Edit'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todos\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: todo.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), isEditMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title\",\n        value: tempTitle,\n        onChange: e => setTempTitle(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"title\",\n        value: todo.title,\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), isEditMode ? /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"summary\",\n        value: tempSummary,\n        onChange: e => setTempSummary(e.target.value),\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"summary\",\n        value: todo.summary,\n        type: \"text\",\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [isEditMode ? /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"done\",\n          onClick: () => updateTodo(todo.id),\n          children: \"Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"update\",\n          onClick: () => editTodo(todo.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icons\",\n            id: \"update\",\n            src: Update,\n            alt: \"update-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"delete\",\n          onClick: () => deleteTodo(todo.id),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"icons\",\n            id: \"delete\",\n            src: Delete,\n            alt: \"delete-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(Home, \"o2XAMNzjU0PmXGbjrTfAlX9C2hw=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","Delete","Update","todos","todosData","jsxDEV","_jsxDEV","Home","_s","setTodos","isEditMode","setIsEditMode","tempTitle","setTempTitle","tempSummary","setTempSummary","deleteTodo","id","prevTodos","filter","todo","map","index","console","log","editTodo","todoToUpdate","find","title","summary","updateTodo","toggleEditMode","refresh","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","type","readOnly","src","alt","_c","$RefreshReg$"],"sources":["/home/stevonene/development/moringa/projects/todo/front/src/components/home/Home.js"],"sourcesContent":["\nimport React, { useState } from \"react\";\nimport \"./home.css\";\nimport Delete from \"../../images/delete.png\";\nimport Update from \"../../images/update.png\";\nimport { todos as todosData } from \"../../images/data\";\n\nexport default function Home() {\n  const [todos, setTodos] = useState(todosData);\n  const [isEditMode, setIsEditMode] = useState(false);\n  const [tempTitle, setTempTitle] = useState(\"\");\n  const [tempSummary, setTempSummary] = useState(\"\");\n\n  const deleteTodo = (id) => {\n    setTodos((prevTodos) => {\n      return prevTodos\n        .filter((todo) => todo.id !== id)\n        .map((todo, index) => {\n          return {\n            ...todo,\n            id: index + 1,\n          };\n        });\n    });\n    console.log(\"delete Todo successful\");\n  };\n\n  const editTodo = (id) => {\n    const todoToUpdate = todos.find((todo) => todo.id === id);\n    setTempTitle(todoToUpdate.title);\n    setTempSummary(todoToUpdate.summary);\n    setIsEditMode(true);\n  };\n\n  const updateTodo = (id) => {\n    setTodos((prevTodos) => {\n      return prevTodos.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            title: tempTitle,\n            summary: tempSummary,\n          };\n        }\n        return todo;\n      });\n    });\n    setIsEditMode(false);\n    console.log(\"update Todo successful\");\n  };\n\n  const toggleEditMode = () => {\n    setIsEditMode(!isEditMode);\n  };\n\n  const refresh = () => {\n    console.log(\"refreshed successfully\");\n  };\n\n  return (\n    <div className=\"main\">\n      <h1>TO-DOs</h1>\n      <button onClick={() => refresh()}>refresh</button>\n      <button onClick={() => toggleEditMode()}>{isEditMode ? 'Cancel' : 'Edit'}</button>\n\n      {todos.map((todo) => (\n        <div className=\"todos\" key={todo.id}>\n          <p>{todo.id}</p>\n          {isEditMode ? (\n            <input\n              className=\"title\"\n              value={tempTitle}\n              onChange={(e) => setTempTitle(e.target.value)}\n              type=\"text\"\n            />\n          ) : (\n            <input className=\"title\" value={todo.title} type=\"text\" readOnly />\n          )}\n          {isEditMode ? (\n            <input\n              className=\"summary\"\n              value={tempSummary}\n              onChange={(e) => setTempSummary(e.target.value)}\n              type=\"text\"\n            />\n          ) : (\n            <input\n              className=\"summary\"\n              value={todo.summary}\n              type=\"text\"\n              readOnly\n            />\n          )}\n          <div className=\"button-container\">\n            {isEditMode ? (\n              <button id=\"done\" onClick={() => updateTodo(todo.id)}>\n                Done\n              </button>\n            ) : (\n              <button id=\"update\" onClick={() => editTodo(todo.id)}>\n                <img\n                  className=\"icons\"\n                  id=\"update\"\n                  src={Update}\n                  alt=\"update-icon\"\n                />\n              </button>\n            )}\n            <button id=\"delete\" onClick={() => deleteTodo(todo.id)}>\n              <img\n                className=\"icons\"\n                id=\"delete\"\n                src={Delete}\n                alt=\"delete-icon\"\n              />\n            </button>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}